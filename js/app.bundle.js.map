{"version":3,"file":"js/app.bundle.js","mappings":"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","sources":["webpack://skyve-app/./src/assets/images/ sync \\.(png%7Cjpe","webpack://skyve-app/webpack/bootstrap","webpack://skyve-app/webpack/runtime/global","webpack://skyve-app/webpack/runtime/hasOwnProperty shorthand","webpack://skyve-app/webpack/runtime/publicPath","webpack://skyve-app/./src/js/app.js"],"sourcesContent":["var map = {\n\t\"./background/morn.webp\": 30,\n\t\"./background/night.webp\": 648,\n\t\"./background/noon.webp\": 296,\n\t\"./background/starry-mountain.webp\": 497,\n\t\"./house.webp\": 755,\n\t\"./weather/clear/morn-clear.webp\": 562,\n\t\"./weather/clear/night-clear.webp\": 804,\n\t\"./weather/cloudly/evening-cloudly.webp\": 282,\n\t\"./weather/cloudly/morn-cloudly.webp\": 696,\n\t\"./weather/cloudly/night-cloudly.webp\": 384,\n\t\"./weather/drizzle/evening-drizzle.webp\": 210,\n\t\"./weather/drizzle/morn-drizzle.webp\": 423,\n\t\"./weather/drizzle/night-drizzle.webp\": 932,\n\t\"./weather/icon/cloud.webp\": 891,\n\t\"./weather/icon/lighting.webp\": 218,\n\t\"./weather/icon/rain.webp\": 788,\n\t\"./weather/icon/snow.webp\": 125,\n\t\"./weather/icon/star1.webp\": 153,\n\t\"./weather/icon/star2.webp\": 764,\n\t\"./weather/icon/sun.webp\": 616,\n\t\"./weather/rain/evening-rain.webp\": 810,\n\t\"./weather/rain/morn-rain.webp\": 44,\n\t\"./weather/rain/night-rain.webp\": 356,\n\t\"./weather/snow/evening-snow.webp\": 496,\n\t\"./weather/snow/morn-snow.webp\": 852,\n\t\"./weather/snow/night-snow.webp\": 658,\n\t\"./weather/thunderstorm/evening-storm.webp\": 868,\n\t\"./weather/thunderstorm/morn-storm.webp\": 568,\n\t\"./weather/thunderstorm/night-storm.webp\": 974\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 295;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","import \"../../src/css/main.css\"; // import main.css\r\nimport \"../../src/css/styles.css\"; // import styles.cs\r\n\r\n// import all images from assets/images folder\r\nconst images = require.context(\r\n  \"../assets/images\",\r\n  true,\r\n  /\\.(png|jpe?g|gif|svg|webp)$/,\r\n);\r\nimages.keys().map((key) => images(key)); // create an array to store all imported images\r\n\r\nconst daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]; // Array list of day\r\nconst cityName = $(\"#city-name\"); // selector city-name\r\nconst countryCode = $(\"#country-code\"); // selector country-code\r\nconst currentTemp = $(\"#current-temp\"); // selector current-temp\r\nconst currentHumi = $(\"#current-humi\"); // selector current-humidity\r\nconst currentWeather = $(\"#current-weather\"); // selector current-weather\r\nconst currentWindSpeed = $(\"#current-windspeed\"); // selector current windspeed\r\nconst iconCurrentWeather = $(\"#icon-current-weather\"); // selector icon-current-weather\r\nconst localTime = $(\"#local-time\"); // selector local-time\r\n\r\nconst weatherDescriptions = (weatherCode) => {\r\n  let weather = \"\";\r\n  let iconSrc = \"\";\r\n\r\n  if (weatherCode === 0 || weatherCode === 1) {\r\n    weather = \"Clear\";\r\n    iconSrc = \"assets/images/weather/snow/night-clear.webp\";\r\n  } else if (weatherCode === 2) {\r\n    weather = \"Cloudy\";\r\n    iconSrc = \"assets/images/weather/cloudly/night-cloudly.webp\";\r\n  } else if (weatherCode === 3) {\r\n    weather = \"Overcast\";\r\n    iconSrc = \"assets/images/weather/icon/cloud.webp\";\r\n  } else if (weatherCode === 45 || weatherCode === 48) {\r\n    weather = \"Fog\";\r\n    iconSrc = \"assets/images/weather/icon/cloud.webp\";\r\n  } else if (\r\n    weatherCode === 51 ||\r\n    weatherCode === 53 ||\r\n    weatherCode === 55 ||\r\n    weatherCode === 56 ||\r\n    weatherCode === 57\r\n  ) {\r\n    weather = \"Drizzle\";\r\n    iconSrc = \"assets/images/weather/cloudly/night-drizzle.webp\";\r\n  } else if (\r\n    weatherCode === 61 ||\r\n    weatherCode === 63 ||\r\n    weatherCode === 65 ||\r\n    weatherCode === 66 ||\r\n    weatherCode === 67 ||\r\n    weatherCode === 80 ||\r\n    weatherCode === 81 ||\r\n    weatherCode === 82\r\n  ) {\r\n    weather = \"Rain\";\r\n    iconSrc = \"assets/images/weather/rain/night-rain.webp\";\r\n  } else if (\r\n    weatherCode === 71 ||\r\n    weatherCode === 73 ||\r\n    weatherCode === 75 ||\r\n    weatherCode === 77 ||\r\n    weatherCode === 85 ||\r\n    weatherCode === 86\r\n  ) {\r\n    weather = \"Snow\";\r\n    iconSrc = \"assets/images/weather/snow/night-snow.webp\";\r\n  } else if (weatherCode === 95 || weatherCode === 96 || weatherCode === 99) {\r\n    weather = \"Thunderstorm\";\r\n    iconSrc = \"assets/images/weather/thunderstorm/night-storm.webp\";\r\n  }\r\n\r\n  return { weather: weather,\r\n    iconSrc: iconSrc }; \r\n};\r\n\r\n// (f) display current-time\r\nconst showTime = () => {\r\n  let d = new Date(); // (f) date\r\n  let date = d.getDate(); // get date\r\n  let day = d.getDay(); // get array day [0-6]\r\n\r\n  let hours = d.getHours(); // get hours\r\n  let minutes = d.getMinutes(); // get minute\r\n\r\n  hours = hours < 10 ? \"0\" + hours : hours;\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\r\n  // format time with <span> for colons\r\n  let time = `${daysOfWeek[day]} ${date} <span> | </span> ${hours} <span class=\"colon\">:</span> ${minutes}`;\r\n\r\n  localTime.html(time); // render time to page\r\n\r\n  // apply blink effect to colons every second\r\n  const currentSeconds = new Date().getSeconds(); // get seconds\r\n\r\n  if (currentSeconds % 1 === 0) {\r\n    // blink every second\r\n    $(\".colon\").addClass(\"blink\");\r\n  } else {\r\n    $(\".colon\").removeClass(\"blink\");\r\n  }\r\n\r\n  setTimeout(showTime, 1000); // delay 1s\r\n};\r\n\r\nshowTime(); // display local time\r\n\r\n// API URLs\r\nconst apiGeocoding = \"https://api.opencagedata.com/geocode/v1/json\"; // API geocoding\r\nconst keyGeocoding = \"250178f6b314472c95280f5f73d608e1\"; // keyAPI geocodng\r\n// const apiWeather = \"https://api.openweathermap.org/data/2.5\"; // API current weather\r\n// const apiHourlyWeather = \"https://pro.openweathermap.org/data/2.5/forecast/hourly\";\r\n// const keyWeather = \"d12f1c70ff84d00a509bf50060d7af7c\";  //  key API weather\r\n\r\n// (f) get coordinates\r\nconst getCoordinates = (success, error) => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(\r\n      // get current location\r\n      (position) => {\r\n        // return latitude & longitude\r\n        const lat = position.coords.latitude;\r\n        const lon = position.coords.longitude;\r\n        success(lat, lon);\r\n      },\r\n      (err) => {\r\n        // if geocoding error\r\n        console.error(\"Error:\", err.message);\r\n        if (error) {\r\n          error(err.message); // show err msg\r\n        }\r\n      },\r\n    );\r\n  } else {\r\n    // if geocoding blocked / not supported\r\n    const errorMessage = \"Geolocation is not supported by this browser.\";\r\n    console.error(\"Error:\", errorMessage); // show err msg\r\n    if (error) {\r\n      error(errorMessage);\r\n    }\r\n  }\r\n};\r\n\r\n// show day of daily forecast\r\nconst dailyForecastDay = () => {\r\n  let today = new Date().getDay();\r\n  for (let i = 1; i <= 7; i++) {\r\n    // show 7 next days\r\n    let dayIndex = (today + i) % 7;\r\n    $(`#d${i}`).text(daysOfWeek[dayIndex]);\r\n  }\r\n};\r\n\r\n// render geocoding\r\nconst renderGeocoding = (data) => {\r\n  cityName.text(\r\n    data.results[0].components.city || data.results[0].components.county,\r\n  ); // return city-name\r\n  countryCode.text(data.results[0].components.country_code.toUpperCase()); // return country-code\r\n  dailyForecastDay();\r\n};\r\n\r\n// render current weather\r\nconst renderCurrentWeather = (data) => {\r\n  const weatherInfo = weatherDescriptions(data.current.weather_code);\r\n\r\n  currentWeather.text(weatherInfo.weather); // get and set current-weather\r\n  currentTemp.text(Math.round(data.current.temperature_2m) + \"\\u00B0\"); // get and set current-temp\r\n  currentHumi.text(data.current.relative_humidity_2m + \"%\"); // get and set current-humidity\r\n  currentWindSpeed.text(data.current.wind_speed_10m + \" m/s\"); // get and set current-windspeed\r\n\r\n \r\n  if (weatherInfo.iconSrc) {\r\n    iconCurrentWeather.attr(\"src\", weatherInfo.iconSrc); // set current weather icon\r\n  } // set current weather icon\r\n\r\n\r\n};\r\n\r\n// render hourly forecast\r\n// render hourly forecast\r\nconst renderHourlyForecast = (data) => {\r\n  const forecastData = data.hourly; // Data dari API hourlyForecast\r\n  const currentTime = new Date(); // Mendapatkan waktu sekarang\r\n  const currentHour = currentTime.getHours(); // Mendapatkan jam sekarang\r\n  const currentDateString = currentTime.toISOString().slice(0, 10); // Mendapatkan tanggal sekarang (YYYY-MM-DD)\r\n\r\n  const hourlyForecastContainer = $(\"#hourly-forecast\");\r\n  hourlyForecastContainer.empty(); // Kosongkan kontainer sebelum render\r\n\r\n  // Gabungkan data ke dalam array objek\r\n  const combinedForecastData = forecastData.time.map((time, index) => ({\r\n    time,\r\n    temperature: forecastData.temperature_2m[index],\r\n    weatherCode: forecastData.weather_code[index],\r\n  }));\r\n\r\n   // Mendapatkan data untuk 12 jam ke depan hari ini\r\n   const next12HoursDataToday = filterNext12HoursToday(combinedForecastData, currentDateString, currentHour);\r\n   \r\n   console.log(\"Next 12 Hours Data:\", next12HoursDataToday); // Cek data setelah difilter\r\n\r\n  // Iterasi data untuk tiap jam\r\n  next12HoursDataToday.forEach(({ time, temperature, weatherCode }) => {\r\n    const timeFormatted = new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false }); // Format waktu HH:MM\r\n    const weatherIcon = weatherDescriptions(weatherCode).iconSrc;\r\n    console.log(weatherIcon)\r\n  //   const { dt_txt, main: { temp }, weather } = data;\r\n  //   const time = dt_txt.split(\" \")[1].slice(0, 5); // Mendapatkan waktu (HH:MM)\r\n  //   console.log(time);\r\n    \r\n    // const weatherCondition = weather[0].main; // Mendapatkan kondisi cuaca\r\n\r\n    // Render elemen hourly forecast dengan ikon cuaca yang sesuai\r\n    const hourlyForecastElement = `\r\n      <div class=\"bg-[#48319D]/80 w-12 h-24 rounded-full shadow-2xl mx-auto text-center\">\r\n        <div class=\"flex justify-center items-center relative -top-5\">\r\n          <div class=\"mx-auto text-center\">\r\n            <img src=\"${weatherIcon}\" alt=\"icon_weather\" class=\"w-12 h-auto\">\r\n          </div>\r\n        </div>\r\n        <div class=\"relative -top-3 text-xs text-white\">\r\n          <p class=\"\">${timeFormatted}</p>\r\n          <p class=\"\">${Math.round(temperature)}&deg;</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // // Menambahkan elemen ke dalam container\r\n    hourlyForecastContainer.append(hourlyForecastElement);\r\n }); \r\n};\r\n\r\n/// Filter 12 jam ke depan\r\nconst filterNext12HoursToday = (forecastData, currentDateString, currentHour) => {\r\n  const maxHourToday = Math.min(currentHour + 12, 24); // Tentukan maksimal 12 jam ke depan, tidak lebih dari jam 24\r\n\r\n  return forecastData.filter(({ time }) => {\r\n    const date = time.split(\"T\")[0]; // Mendapatkan tanggal\r\n    const hour = parseInt(time.split(\"T\")[1].split(\":\")[0]); // Mendapatkan jam dalam format angka\r\n    return date === currentDateString && hour >= currentHour && hour < maxHourToday;\r\n  });\r\n};\r\n\r\n\r\n// Render daily forecast\r\nconst renderDailyForecast = (data) => {\r\n  const forecastData = data.daily; \r\n  const dailyForecastContainer = $(\"#daily-forecast\");\r\n  dailyForecastContainer.empty();\r\n\r\n  const today = new Date().getDay();\r\n\r\n  for (let i = 0; i < forecastData.time.length  ; i++) {\r\n    const dayIndex = (today + i) % 7; // Menghitung index hari secara berurutan, dimulai dari hari ini\r\n    const dayName = daysOfWeek[dayIndex]; // Nama hari dari array daysOfWeek\r\n\r\n \r\n    const dayMaxTemp = Math.round(forecastData.temperature_2m_max[i]) + \"\\u00B0\"; // Suhu maksimum hari ini\r\n    const dayMinTemp = Math.round(forecastData.temperature_2m_min[i]) + \"\\u00B0\"; // Suhu minimum hari ini\r\n    const weatherCode = forecastData.weather_code[i]; // Kode cuaca untuk ikon\r\n    const dailyIconSrc = weatherDescriptions(weatherCode).iconSrc; // Mendapatkan ikon cuaca berdasarkan kode\r\n \r\n\r\n    // Render elemen dengan ikon cuaca yang sesuai\r\n    const dailyForecastElement = `\r\n    <div class=\"bg-[#48319D]/80 w-12 h-24 rounded-full shadow-2xl mx-auto text-center\">\r\n      <div class=\"flex justify-center items-center relative -top-5\">\r\n        <div class=\"mx-auto text-center\">\r\n          <img src=\"${dailyIconSrc}\" alt=\"icon_weather\" class=\"w-12 h-auto\">\r\n        </div>\r\n      </div>\r\n      <div class=\"relative -top-3 text-xs text-white\">\r\n        <p>${dayName}</p>\r\n        <p>${dayMaxTemp} / ${dayMinTemp}</p>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  dailyForecastContainer.append(dailyForecastElement);\r\n  }\r\n};\r\n\r\n//\r\n$(window).on(\"load\", () => {\r\n  $(\"#daily-forecast\").addClass(\"hidden\");\r\n  // getCoordinates\r\n  getCoordinates(\r\n    (lat, lon) => {\r\n      const apiWeather = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current=temperature_2m,relative_humidity_2m,weather_code,wind_speed_10m&hourly=temperature_2m,weather_code&daily=weather_code,temperature_2m_max,temperature_2m_min&timezone=Asia%2FBangkok `;\r\n\r\n      fetch(`${apiGeocoding}?q=${lat}%2C${lon}&key=${keyGeocoding}`)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => renderGeocoding(responseJson))\r\n        .catch((error) => console.error(\"Error:\", error));\r\n      // currentWeather\r\n      fetch(`${apiWeather}`)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n          renderCurrentWeather(responseJson);\r\n          renderHourlyForecast(responseJson);\r\n          renderDailyForecast(responseJson);\r\n        })\r\n        .catch((error) => console.error(\"Error:\", error));\r\n      // dailyForecast\r\n\r\n      /*\r\n      fetch(`${apiWeather}/forecast/daily?lat=${lat}&lon=${lon}&cnt=7&appid=${keyWeather}&units=metric`)\r\n        .then((response) => response.json())\r\n        .then((responseJson) => renderDailyForecast(responseJson))\r\n        .catch((error) => console.error(\"Error:\", error));\r\n         */\r\n      // hourlyForecast\r\n  \r\n \r\n    },\r\n    (err) => {\r\n      // if  geolocation err\r\n      alert(\r\n        \"Unable to retrieve your location. Please ensure location services are enabled.\",\r\n      );\r\n      console.error(\"Geolocation error:\", err);\r\n    },\r\n  );\r\n});\r\n\r\n// show-hide drawer\r\n$(\"#drawer-toggle\").on(\"click\", () => {\r\n  // selector drawer-toggle\r\n  const drawer = $(\"#drawer-swipe\"); // selector drawer-swipe\r\n  const expandedContent = $(\"#drawer-expanded-content\"); // selector expanded-content\r\n  const menu = $(\"#menu\");\r\n\r\n  if (drawer.hasClass(\"drawer-collapsed\")) {\r\n    drawer.removeClass(\"drawer-collapsed\").addClass(\"drawer-expanded\");\r\n    expandedContent.removeClass(\"hidden\");\r\n    menu.addClass(\"hidden\");\r\n  } else {\r\n    drawer.removeClass(\"drawer-expanded\").addClass(\"drawer-collapsed\");\r\n    expandedContent.addClass(\"hidden\");\r\n    menu.removeClass(\"hidden\");\r\n  }\r\n});\r\n\r\n// Event klik untuk menampilkan konten Hourly Forecast\r\n$(\"#hourly-page\").on(\"click\", function () {\r\n  $(\"#daily-forecast\").addClass(\"hidden\"); // Sembunyikan Daily Forecast\r\n  $(\"#hourly-forecast\").removeClass(\"hidden\"); // Tampilkan Hourly Forecast\r\n});\r\n\r\n// Event klik untuk menampilkan konten Daily Forecast\r\n$(\"#daily-page\").on(\"click\", function () {\r\n  $(\"#hourly-forecast\").addClass(\"hidden\"); // Sembunyikan Hourly Forecast\r\n  $(\"#daily-forecast\").removeClass(\"hidden\"); // Tampilkan Daily Forecast\r\n});\r\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","replace","p","images","key","daysOfWeek","cityName","$","countryCode","currentTemp","currentHumi","currentWeather","currentWindSpeed","iconCurrentWeather","localTime","weatherDescriptions","weatherCode","weather","iconSrc","showTime","d","Date","date","getDate","day","getDay","hours","getHours","minutes","getMinutes","time","html","getSeconds","addClass","removeClass","setTimeout","on","success","error","navigator","geolocation","getCurrentPosition","position","lat","lon","apiWeather","fetch","then","response","json","responseJson","renderGeocoding","data","text","results","components","city","county","country_code","today","dayIndex","dailyForecastDay","catch","console","weatherInfo","current","weather_code","Math","round","temperature_2m","relative_humidity_2m","wind_speed_10m","attr","renderCurrentWeather","forecastData","hourly","currentTime","currentHour","currentDateString","toISOString","slice","hourlyForecastContainer","empty","next12HoursDataToday","maxHourToday","min","filter","split","hour","parseInt","filterNext12HoursToday","index","temperature","log","forEach","timeFormatted","toLocaleTimeString","minute","hour12","weatherIcon","hourlyForecastElement","append","renderHourlyForecast","daily","dailyForecastContainer","dayName","dayMaxTemp","temperature_2m_max","dayMinTemp","temperature_2m_min","dailyForecastElement","renderDailyForecast","coords","latitude","longitude","err","message","errorMessage","getCoordinates","alert","drawer","expandedContent","menu","hasClass"],"sourceRoot":""}