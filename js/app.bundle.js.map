{"version":3,"file":"js/app.bundle.js","mappings":"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","sources":["webpack://skyve-app/./src/assets/images/ sync \\.(png%7Cjpe","webpack://skyve-app/webpack/bootstrap","webpack://skyve-app/webpack/runtime/global","webpack://skyve-app/webpack/runtime/hasOwnProperty shorthand","webpack://skyve-app/webpack/runtime/publicPath","webpack://skyve-app/./src/js/app.js"],"sourcesContent":["var map = {\n\t\"./background/morn.webp\": 30,\n\t\"./background/night.webp\": 648,\n\t\"./background/noon.webp\": 296,\n\t\"./background/starry-mountain.webp\": 497,\n\t\"./house.webp\": 755,\n\t\"./weather/clear/morn-clear.webp\": 562,\n\t\"./weather/clear/night-clear.webp\": 804,\n\t\"./weather/cloudly/evening-cloudly.webp\": 282,\n\t\"./weather/cloudly/morn-cloudly.webp\": 696,\n\t\"./weather/cloudly/night-cloudly.webp\": 384,\n\t\"./weather/drizzle/evening-drizzle.webp\": 210,\n\t\"./weather/drizzle/morn-drizzle.webp\": 423,\n\t\"./weather/drizzle/night-drizzle.webp\": 932,\n\t\"./weather/icon/cloud.webp\": 891,\n\t\"./weather/icon/lighting.webp\": 218,\n\t\"./weather/icon/rain.webp\": 788,\n\t\"./weather/icon/snow.webp\": 125,\n\t\"./weather/icon/star1.webp\": 153,\n\t\"./weather/icon/star2.webp\": 764,\n\t\"./weather/icon/sun.webp\": 616,\n\t\"./weather/rain/evening-rain.webp\": 810,\n\t\"./weather/rain/morn-rain.webp\": 44,\n\t\"./weather/rain/night-rain.webp\": 356,\n\t\"./weather/snow/evening-snow.webp\": 496,\n\t\"./weather/snow/morn-snow.webp\": 852,\n\t\"./weather/snow/night-snow.webp\": 658,\n\t\"./weather/thunderstorm/evening-storm.webp\": 868,\n\t\"./weather/thunderstorm/morn-storm.webp\": 568,\n\t\"./weather/thunderstorm/night-storm.webp\": 974\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 295;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// import CSS\r\nimport \"../../src/css/main.css\";\r\n// import CSS\r\nimport \"../../src/css/styles.css\";\r\n// \r\n// import \"../assets/images/background/starry-mountain.png\";\r\n// // \r\n// import \"../assets/images/weather/thunderstorm/night-storm.webp\";\r\n\r\n// Mengimpor semua gambar dari folder assets/images\r\nconst images = require.context('../assets/images', true, /\\.(png|jpe?g|gif|svg|webp)$/);\r\n\r\n// Membuat array untuk menyimpan semua gambar yang diimpor\r\nconst importedImages = images.keys().map((key) => images(key));\r\n\r\n\r\n$('#drawer-toggle').on('click', function () {\r\n  const drawer = $('#drawer-swipe');\r\n  const expandedContent = $('#drawer-expanded-content');\r\n\r\n  if (drawer.hasClass('drawer-collapsed')) {\r\n    drawer.removeClass('drawer-collapsed').addClass('drawer-expanded');\r\n    expandedContent.removeClass('hidden');\r\n  } else {\r\n    drawer.removeClass('drawer-expanded').addClass('drawer-collapsed');\r\n    expandedContent.addClass('hidden');\r\n  }\r\n});\r\n\r\n// import \"../../src/assets/fonts/sf-pro-display-regular.otf\";\r\n// \r\n// Array list of day\r\n// const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n// Selectors\r\nconst localTime = $(\"#local-time\");\r\n// const cityName = $(\"#city-name\");\r\n// const countryName = $(\"#country-name\");\r\n// const temp = $(\"#temp\");\r\n// const humi = $(\"#humidity\");\r\n// const weather = $(\"#weather\");\r\n// const minTemp = $(\"#min-temp\");\r\n// const maxTemp = $(\"#max-temp\");\r\n\r\n// const day1 = $(\"#day1\");\r\n// const day2 = $(\"#day2\");\r\n// const day3 = $(\"#day3\");\r\n// const day4 = $(\"#day4\");\r\n// const day5 = $(\"#day5\");\r\n// const day6 = $(\"#day6\");\r\n// const day7 = $(\"#day7\");\r\n\r\n// const selectorHours = [\r\n//   $(\"#hour1\"), $(\"#hour2\"), $(\"#hour3\"), $(\"#hour4\"), $(\"#hour5\"),\r\n//   $(\"#hour6\"), $(\"#hour7\"), $(\"#hour8\"), $(\"#hour9\"), $(\"#hour10\"),\r\n//   $(\"#hour11\"), $(\"#hour12\")\r\n// ];\r\n\r\nconst showTime = () => {\r\n  const date = new Date();\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n  let seconds = date.getSeconds();\r\n  \r\n  hours = (hours < 10) ? \"0\" + hours : hours;\r\n  minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n  seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n  // Format time with <span> for colons\r\n  let time = `${hours} <span class=\"colon\">:</span> ${minutes} <span class=\"colon\">:</span> ${seconds}`;\r\n  \r\n  localTime.html(time);\r\n\r\n // Apply blink effect to colons every second\r\n const currentSeconds = new Date().getSeconds();\r\n  if (currentSeconds % 1 === 0) {  // Blink every second\r\n    $('.colon').addClass('blink');\r\n  } else {\r\n    $('.colon').removeClass('blink');\r\n  }\r\n\r\n  setTimeout(showTime, 1000);\r\n}\r\n\r\nshowTime(); // Display local time\r\n\r\n// API URLs\r\nconst apiGeocoding = \"https://api.opencagedata.com/geocode/v1/json\";\r\nconst keyGeocoding = \"250178f6b314472c95280f5f73d608e1\";\r\nconst apiWeather = \"https://api.openweathermap.org/data/2.5\";\r\nconst keyWeather = \"d12f1c70ff84d00a509bf50060d7af7c\";\r\nconst apiHourlyWeather = \"https://pro.openweathermap.org/data/2.5/forecast/hourly\";\r\n\r\n// Get coordinates\r\nconst getCoordinates = (success, error) => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const lat = position.coords.latitude;\r\n        const lon = position.coords.longitude;\r\n        success(lat, lon);\r\n      },\r\n      (err) => {\r\n        console.error(\"Error:\", err.message);\r\n        if (error) {\r\n          error(err.message);\r\n        }\r\n      },\r\n    );\r\n  } else {\r\n    const errorMessage = \"Geolocation is not supported by this browser.\";\r\n    console.error(\"Error:\", errorMessage);\r\n    if (error) {\r\n      error(errorMessage);\r\n    }\r\n  }\r\n};\r\n\r\n// Forecast days\r\nconst forecastDays = () => {\r\n  let today = new Date().getDay();\r\n  for (let i = 1; i <= 7; i++) {\r\n    let dayIndex = (today + i) % 7;\r\n    $(`#d${i}`).text(daysOfWeek[dayIndex]);\r\n  }\r\n}\r\n\r\n// Render geocoding\r\nconst renderGeocoding = (data) => {\r\n  cityName.text(data.results[0].components.city || data.results[0].components.county);\r\n  countryName.text(data.results[0].components.country);\r\n  forecastDays(); // Call function to display days\r\n};\r\n\r\n// Render current weather\r\nconst renderCurrentWeather = (data) => {\r\n  weather.text(data.weather[0].main);\r\n  temp.text(data.main.temp + \"\\u00B0C\");\r\n  humi.text(data.main.humidity + \"%\");\r\n}\r\n\r\n// Render daily forecast\r\nconst renderDailyForecast = (data) => {\r\n\r\n  maxTemp.text(Math.round(data.list[0].temp.max) + \"\\u00B0C\");\r\n  day1.text(Math.round(data.list[1].temp.max) + \"\\u00B0C\" + \"/\" + Math.round(data.list[0].temp.min) + \"\\u00B0C\" + \", \" + data.list[1].weather[0].main);\r\n   day2.text(Math.round(data.list[1].temp.max) + \"\\u00B0C\" + \"/\" + Math.round(data.list[1].temp.min) + \"\\u00B0C\" + \", \" + data.list[1].weather[0].main);\r\n  day3.text(Math.round(data.list[2].temp.max) + \"\\u00B0C\" + \"/\" + Math.round(data.list[2].temp.min) + \"\\u00B0C\" + \", \" + data.list[2].weather[0].main);\r\n  day4.text(Math.round(data.list[3].temp.max) + \"\\u00B0C\" + \"/\" + Math.round(data.list[3].temp.min) + \"\\u00B0C\" + \", \" + data.list[3].weather[0].main);\r\n  day5.text(Math.round(data.list[4].temp.max) + \"\\u00B0C\" + \"/\" + Math.round(data.list[4].temp.min) + \"\\u00B0C\" + \", \" + data.list[4].weather[0].main);\r\n  day6.text(Math.round(data.list[5].temp.max) + \"\\u00B0C\" + \"/\" + Math.round(data.list[5].temp.min) + \"\\u00B0C\" + \", \" + data.list[5].weather[0].main);\r\n  day7.text(Math.round(data.list[6].temp.max) + \"\\u00B0C\" + \"/\" + Math.round(data.list[6].temp.min) + \"\\u00B0C\" + \", \" + data.list[6].weather[0].main);\r\n}\r\n\r\n// Filter next 12 hours today\r\nconst filterNext12HoursToday = (weatherData, currentDateString, currentHour) => {\r\n  const maxHourToday = Math.min(currentHour + 12, 24);\r\n\r\n  return weatherData.list.filter(data => {\r\n    const [date, time] = data.dt_txt.split(' ');\r\n    const [hour] = time.split(':');\r\n    return date === currentDateString && hour >= currentHour && hour < maxHourToday;\r\n  });\r\n};\r\n\r\n// Get minimum temperature from hourly data\r\nconst getMinTempFromHourlyData = (hourlyData) => {\r\n  return Math.min(...hourlyData.map(data => data.main.temp));\r\n};\r\n\r\n// Render hourly forecast\r\nconst renderHourlyForecast = (data) => {\r\n  const weatherData = data;\r\n  const currentTime = new Date();\r\n  const currentHour = currentTime.getHours();\r\n  const currentDateString = currentTime.toISOString().slice(0, 10);\r\n\r\n  const next12HoursDataToday = filterNext12HoursToday(weatherData, currentDateString, currentHour);\r\n  const minTempToday = getMinTempFromHourlyData(next12HoursDataToday);\r\n  console.log(\"Min temp today from hourly data:\", minTempToday);\r\n  minTemp.text(Math.round(minTempToday) + \"\\u00B0C\"); \r\n\r\n  next12HoursDataToday.forEach((data, index) => {\r\n    if (selectorHours[index]) {\r\n      const time = data.dt_txt.split(' ')[1].split(':')[0];\r\n      selectorHours[index].text(`Jam: ${time}, Suhu: ${data.main.temp}°C`);\r\n      selectorHours[index].show();\r\n    }\r\n  });\r\n\r\n  for (let i = next12HoursDataToday.length; i < selectorHours.length; i++) {\r\n    selectorHours[i].hide();\r\n  }\r\n}\r\n\r\n// On window load\r\n// $(window).on(\"load\", () => {\r\n//   getCoordinates(\r\n//     (lat, lon) => {\r\n//       fetch(`${apiGeocoding}?q=${lat}%2C${lon}&key=${keyGeocoding}`)\r\n//         .then((response) => response.json())\r\n//         .then((responseJson) => renderGeocoding(responseJson))\r\n//         .catch((error) => console.error(\"Error:\", error));\r\n\r\n//       fetch(`${apiWeather}/weather?lat=${lat}&lon=${lon}&appid=${keyWeather}&units=metric`)\r\n//         .then((response) => response.json())\r\n//         .then((responseJson) => renderCurrentWeather(responseJson))\r\n//         .catch((error) => console.error(\"Error:\", error));\r\n\r\n//       fetch(`${apiWeather}/forecast/daily?lat=${lat}&lon=${lon}&cnt=7&appid=${keyWeather}&units=metric`)\r\n//         .then((response) => response.json())\r\n//         .then((responseJson) => renderDailyForecast(responseJson))\r\n//         .catch((error) => console.error(\"Error:\", error));\r\n\r\n//       fetch(`${apiHourlyWeather}?lat=${lat}&lon=${lon}&appid=${keyWeather}&units=metric`)\r\n//         .then((response) => response.json())\r\n//         .then((responseJson) => renderHourlyForecast(responseJson))\r\n//         .catch((error) => console.error(\"Error:\", error));\r\n//     },\r\n//     (err) => {\r\n//       alert(\"Unable to retrieve your location. Please ensure location services are enabled.\");\r\n//       console.error(\"Geolocation error:\", err);\r\n//     }\r\n//   );\r\n// });\r\n\r\n\r\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","replace","p","images","key","$","on","drawer","expandedContent","hasClass","removeClass","addClass","localTime","showTime","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","time","html","setTimeout"],"sourceRoot":""}