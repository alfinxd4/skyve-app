{"version":3,"file":"js/main.bundle.js","mappings":"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","sources":["webpack://skyve-app/./src/assets/images/ sync \\.(png%7Cjpe","webpack://skyve-app/webpack/bootstrap","webpack://skyve-app/webpack/runtime/define property getters","webpack://skyve-app/webpack/runtime/global","webpack://skyve-app/webpack/runtime/hasOwnProperty shorthand","webpack://skyve-app/webpack/runtime/publicPath","webpack://skyve-app/./src/js/location.js","webpack://skyve-app/./src/js/weather.js","webpack://skyve-app/./src/js/background.js","webpack://skyve-app/./src/js/main.js"],"sourcesContent":["var map = {\n\t\"./background/morn.webp\": 30,\n\t\"./background/night.webp\": 648,\n\t\"./background/noon.webp\": 296,\n\t\"./background/starry-mountain.webp\": 497,\n\t\"./house.webp\": 755,\n\t\"./weather/clear/morn-clear.webp\": 562,\n\t\"./weather/clear/night-clear.webp\": 804,\n\t\"./weather/cloudly/evening-cloudly.webp\": 282,\n\t\"./weather/cloudly/morn-cloudly.webp\": 696,\n\t\"./weather/cloudly/night-cloudly.webp\": 384,\n\t\"./weather/drizzle/evening-drizzle.webp\": 210,\n\t\"./weather/drizzle/morn-drizzle.webp\": 423,\n\t\"./weather/drizzle/night-drizzle.webp\": 932,\n\t\"./weather/fog/fog.webp\": 627,\n\t\"./weather/icon/cloud.webp\": 891,\n\t\"./weather/icon/lighting.webp\": 218,\n\t\"./weather/icon/rain.webp\": 788,\n\t\"./weather/icon/snow.webp\": 125,\n\t\"./weather/icon/star1.webp\": 153,\n\t\"./weather/icon/star2.webp\": 764,\n\t\"./weather/icon/sun.webp\": 616,\n\t\"./weather/overcast/overcast.webp\": 907,\n\t\"./weather/rain/evening-rain.webp\": 810,\n\t\"./weather/rain/morn-rain.webp\": 44,\n\t\"./weather/rain/night-rain.webp\": 356,\n\t\"./weather/snow/evening-snow.webp\": 496,\n\t\"./weather/snow/morn-snow.webp\": 852,\n\t\"./weather/snow/night-snow.webp\": 658,\n\t\"./weather/thunderstorm/evening-storm.webp\": 868,\n\t\"./weather/thunderstorm/morn-storm.webp\": 568,\n\t\"./weather/thunderstorm/night-storm.webp\": 974\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 295;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","\r\nimport * as Main from \"./main.js\";\r\n\r\nexport const getCoordinates = (success, error) => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => success(position.coords.latitude, position.coords.longitude),\r\n        (err) => {\r\n          console.error(\"Error:\", err.message);\r\n          error && error(err.message);\r\n        }\r\n      );\r\n    } else {\r\n      const errorMessage = \"Geolocation is not supported by this browser.\";\r\n      console.error(\"Error:\", errorMessage);\r\n      error && error(errorMessage);\r\n    }\r\n  };\r\n\r\n  export const renderGeocoding = (data) => {\r\n    Main.selectors.cityName.text(data.results[0].components.city || data.results[0].components.county);\r\n    Main.selectors.countryCode.text(data.results[0].components.country_code.toUpperCase());\r\n  };\r\n  ","\r\n\r\nimport * as Background  from \"./background.js\"; // import background.js\r\nimport * as Main from \"./main.js\";  // import main.js\r\n\r\n// weather condition default \r\nexport let condition = { \r\n    clouds: false,\r\n    lightning: false, \r\n    rain: false, \r\n    snow: false, \r\n    wind: false \r\n  };\r\n \r\n// set weather description\r\nexport const weatherDescriptions = (weatherCode) => {\r\n    let weather;  // nsme weather\r\n    let iconSrc;  // icon weather\r\n    let timeOfDay = Background.state;\r\n    \r\n    // Menentukan cuaca\r\n    if (weatherCode === 0 || weatherCode === 1) {\r\n      weather = \"Clear\";\r\n    } else if (weatherCode === 2) {\r\n      weather = \"Cloudy\";\r\n    } else if (weatherCode === 3) {\r\n      weather = \"Overcast\";\r\n    } else if (weatherCode === 45 || weatherCode === 48) {\r\n      weather = \"Fog\";\r\n    } else if (weatherCode >= 51 && weatherCode <= 55) {\r\n      weather = \"Drizzle\";\r\n    } else if (\r\n      weatherCode >= 61 && weatherCode <= 65 ||\r\n      weatherCode >= 80 && weatherCode <= 82\r\n    ) {\r\n      weather = \"Rain\";\r\n    } else if (weatherCode >= 71 && weatherCode <= 75 || weatherCode >= 85 && weatherCode <= 86) {\r\n      weather = \"Snow\";\r\n    } else if (weatherCode >= 95 && weatherCode <= 99) {\r\n      weather = \"Thunderstorm\";\r\n    }\r\n  \r\n    // Menentukan iconSrc berdasarkan cuaca\r\n    switch (weather) {\r\n      case \"Clear\":\r\n        if (timeOfDay == 'sunrise') {\r\n          iconSrc = \"assets/images/weather/clear/morn-clear.webp\";\r\n        } else if (timeOfDay == 'day') {\r\n          iconSrc = \"assets/images/weather/clear/morn-clear.webp\";\r\n        } else if (timeOfDay == 'sunset') {\r\n          iconSrc = \"assets/images/weather/clear/morn-clear.webp\";\r\n        } else if (timeOfDay == 'night') {\r\n          iconSrc = \"assets/images/weather/clear/night-clear.webp\";\r\n        }\r\n        break;\r\n      case \"Cloudy\":\r\n        if (timeOfDay == 'sunrise') {\r\n          iconSrc = \"assets/images/weather/cloudly/morn-cloudly.webp\";\r\n        } else if (timeOfDay == 'day') {\r\n          iconSrc = \"assets/images/weather/cloudly/morn-cloudly.webp\";\r\n        } else if (timeOfDay == 'sunset') {\r\n          iconSrc = \"assets/images/weather/cloudly/evening-cloudly.webp\";\r\n        } else if (timeOfDay == 'night') {\r\n          iconSrc = \"assets/images/weather/cloudly/night-cloudly.webp\";\r\n        }\r\n        break;\r\n      case \"Overcast\":\r\n        if (timeOfDay == 'sunrise') {\r\n          iconSrc = \"assets/images/weather/overcast/overcast.webp\";\r\n        } else if (timeOfDay == 'day') {\r\n          iconSrc = \"assets/images/weather/overcast/overcast.webp\";\r\n        } else if (timeOfDay == 'sunset') {\r\n          iconSrc = \"assets/images/weather/overcast/overcast.webp\";\r\n        } else if (timeOfDay == 'night') {\r\n          iconSrc = \"assets/images/weather/overcast/overcast.webp\";\r\n        }\r\n        break;\r\n      case \"Fog\":\r\n        if (timeOfDay == 'sunrise') {\r\n          iconSrc = \"assets/images/weather/fog/fog.webp\";\r\n        } else if (timeOfDay == 'day') {\r\n          iconSrc = \"assets/images/weather/fog/fog.webp\";\r\n        } else if (timeOfDay == 'sunset') {\r\n          iconSrc = \"assets/images/weather/fog/fog.webp\";\r\n        } else if (timeOfDay == 'night') {\r\n          iconSrc = \"assets/images/weather/fog/fog.webp\";\r\n        }\r\n        break;\r\n      case \"Drizzle\":\r\n        if (timeOfDay == 'sunrise') {\r\n          iconSrc = \"assets/images/weather/drizzle/morn-drizzle.webp\";\r\n        } else if (timeOfDay == 'day') {\r\n          iconSrc = \"assets/images/weather/drizzle/morn-drizzle.webp\";\r\n        } else if (timeOfDay == 'sunset') {\r\n          iconSrc = \"assets/images/weather/drizzle/evening-drizzle.webp\";\r\n        } else if (timeOfDay == 'night') {\r\n          iconSrc = \"assets/images/weather/drizzle/night-drizzle.webp\";\r\n        }\r\n        break;\r\n      case \"Rain\":\r\n        if (timeOfDay == 'sunrise') {\r\n          iconSrc = \"assets/images/weather/rain/morn-rain.webp\";\r\n        } else if (timeOfDay == 'day') {\r\n          iconSrc = \"assets/images/weather/rain/morn-rain.webp\";\r\n        } else if (timeOfDay == 'sunset') {\r\n          iconSrc = \"assets/images/weather/rain/evening-rain.webp\";\r\n        } else if (timeOfDay == 'night') {\r\n          iconSrc = \"assets/images/weather/rain/night-rain.webp\";\r\n        }\r\n        break;\r\n      case \"Snow\":\r\n        if (timeOfDay == 'sunrise') {\r\n          iconSrc = \"assets/images/weather/snow/morn-snow.webp\";\r\n        } else if (timeOfDay == 'day') {\r\n          iconSrc = \"assets/images/weather/snow/morn-snow.webp\";\r\n        } else if (timeOfDay == 'sunset') {\r\n          iconSrc = \"assets/images/weather/snow/evening-snow.webp\";\r\n        } else if (timeOfDay == 'night') {\r\n          iconSrc = \"assets/images/weather/snow/night-snow.webp\";\r\n        }\r\n        break;\r\n      case \"Thunderstorm\":\r\n        if (timeOfDay == 'sunrise') {\r\n          iconSrc = \"assets/images/weather/thunderstorm/morn-storm.webp\";\r\n        } else if (timeOfDay == 'day') {\r\n          iconSrc = \"assets/images/weather/thunderstorm/morn-storm.webp\";\r\n        } else if (timeOfDay == 'sunset') {\r\n          iconSrc = \"assets/images/weather/thunderstorm/evening-storm.webp\";\r\n        } else if (timeOfDay == 'night') {\r\n          iconSrc = \"assets/images/weather/thunderstorm/night-storm.webp\";\r\n        }\r\n        break;\r\n    }\r\n  \r\n    return {\r\n      weather,\r\n      iconSrc,\r\n    };\r\n  };\r\n  \r\n  export const renderCurrentWeather = (data) => {\r\n    // const conditions = [0, 2, 3, 45, 51, 61, 71, 95];\r\n    // let currentConditionIndex = 0;\r\n    // let hasThunderstormPassed = false; // Menandakan apakah Thunderstorm sudah lewat\r\n    // let hourSetCount = 0; // Menyimpan jumlah pengulangan untuk mengatur jam\r\n    \r\n    // // Fungsi untuk memperbarui kondisi berdasarkan weather code\r\n    // function updateWeatherCondition() {\r\n    //     const currentWeatherCode = conditions[currentConditionIndex];\r\n    \r\n    //     // Menentukan ikon berdasarkan pengulangan dan kondisi\r\n    //     let iconSrc;\r\n    \r\n    //     // Menentukan jam dan ikon berdasarkan pengulangan\r\n    //     const hourSetMapping = {\r\n    //         0: 8,  // Pengulangan pertama\r\n    //         1: 16, // Pengulangan kedua\r\n    //         2: 20, // Pengulangan ketiga\r\n    //         3: 4   // Pengulangan keempat\r\n    //     };\r\n    \r\n    //     // Menentukan ikon untuk setiap kondisi berdasarkan pengulangan\r\n    //     const iconMapping = {\r\n    //         0: {\r\n    //             0: \"assets/images/weather/clear/morn-clear.webp\",      // Clear\r\n    //             1: \"assets/images/weather/cloudly/morn-cloudly.webp\",    // Cloudy\r\n    //             2: \"assets/images/weather/overcast/overcast.webp\",     // Overcast\r\n    //             3: \"assets/images/weather/fog/fog.webp\",               // Fog\r\n    //             4: \"assets/images/weather/drizzle/morn-drizzle.webp\",   // Drizzle\r\n    //             5: \"assets/images/weather/rain/morn-rain.webp\",         // Rain\r\n    //             6: \"assets/images/weather/snow/morn-snow.webp\",         // Snow\r\n    //             7: \"assets/images/weather/thunderstorm/morn-storm.webp\" // Thunderstorm\r\n    //         },\r\n    //         1: {\r\n    //             0: \"assets/images/weather/clear/morn-clear.webp\",    // Clear\r\n    //             1: \"assets/images/weather/cloudly/evening-cloudly.webp\",  // Cloudy\r\n    //             2: \"assets/images/weather/overcast/overcast.webp\", // Overcast\r\n    //             3: \"assets/images/weather/fog/fog.webp\",        // Fog\r\n    //             4: \"assets/images/weather/drizzle/evening-drizzle.webp\", // Drizzle\r\n    //             5: \"assets/images/weather/rain/evening-rain.webp\",       // Rain\r\n    //             6: \"assets/images/weather/snow/evening-snow.webp\",       // Snow\r\n    //             7: \"assets/images/weather/thunderstorm/evening-storm.webp\" // Thunderstorm\r\n    //         },\r\n    //         2: {\r\n    //             0: \"assets/images/weather/clear/night-clear.webp\",       // Clear\r\n    //             1: \"assets/images/weather/cloudly/night-cloudly.webp\",     // Cloudy\r\n    //             2: \"assets/images/weather/overcast/overcast.webp\", // Overcast\r\n    //             3: \"assets/images/weather/fog/fog.webp\",           // Fog\r\n    //             4: \"assets/images/weather/drizzle/night-drizzle.webp\",   // Drizzle\r\n    //             5: \"assets/images/weather/rain/night-rain.webp\",         // Rain\r\n    //             6: \"assets/images/weather/snow/night-snow.webp\",         // Snow\r\n    //             7: \"assets/images/weather/thunderstorm/night-storm.webp\" // Thunderstorm\r\n    //         },\r\n    //         3: {\r\n    //           0: \"assets/images/weather/clear/morn-clear.webp\",    // Clear\r\n    //           1: \"assets/images/weather/cloudly/evening-cloudly.webp\",  // Cloudy\r\n    //           2: \"assets/images/weather/overcast/overcast.webp\", // Overcast\r\n    //           3: \"assets/images/weather/fog/fog.webp\",        // Fog\r\n    //           4: \"assets/images/weather/drizzle/evening-drizzle.webp\", // Drizzle\r\n    //           5: \"assets/images/weather/rain/evening-rain.webp\",       // Rain\r\n    //           6: \"assets/images/weather/snow/evening-snow.webp\",       // Snow\r\n    //           7: \"assets/images/weather/thunderstorm/evening-storm.webp\" // Thunderstorm\r\n    //         }\r\n    //     };\r\n    \r\n    //     // Mengatur jam dan ikon berdasarkan pengulangan\r\n    //     Background.setCurrentHour(hourSetMapping[hourSetCount]);\r\n    //     iconSrc = iconMapping[hourSetCount][currentConditionIndex];\r\n    \r\n    //     // Mengatur kondisi cuaca\r\n    //     condition.rain = false;\r\n    //     condition.clouds = false;\r\n    //     condition.lightning = false;\r\n    //     condition.snow = false;\r\n    //     condition.wind = false;\r\n    \r\n    //     // Memperbarui kondisi berdasarkan weather code\r\n    //     switch (currentWeatherCode) {\r\n    //         case 0: // Clear\r\n    //             condition.rain = false;\r\n    //             condition.clouds = false;\r\n    //             condition.lightning = false;\r\n    //             condition.snow = false;\r\n    //             condition.wind = false;\r\n    //             Main.selectors.currentWeather.text(\"Clear\");\r\n    //             break;\r\n    //         case 2: // Cloudy\r\n    //             condition.rain = false;\r\n    //             condition.clouds = true;\r\n    //             Main.selectors.currentWeather.text(\"Cloudy\");\r\n    //             break;\r\n    //         case 3: // Overcast\r\n    //             condition.rain = false;\r\n    //             condition.clouds = true;\r\n    //             Main.selectors.currentWeather.text(\"Overcast\");\r\n    //             break;\r\n    //         case 45: // Fog\r\n    //             condition.rain = false;\r\n    //             condition.clouds = true;\r\n    //             condition.wind = true;\r\n    //             Main.selectors.currentWeather.text(\"Fog\");\r\n    //             break;\r\n    //         case 51: // Drizzle\r\n    //             condition.rain = true;\r\n    //             condition.clouds = true;\r\n    //             Main.selectors.currentWeather.text(\"Drizzle\");\r\n    //             break;\r\n    //         case 61: // Rain\r\n    //             condition.rain = true;\r\n    //             condition.clouds = true;\r\n    //             condition.wind = true;\r\n    //             Main.selectors.currentWeather.text(\"Rain\");\r\n    //             break;\r\n    //         case 71: // Snow\r\n    //             condition.snow = true;\r\n    //             Main.selectors.currentWeather.text(\"Snow\");\r\n    //             break;\r\n    //         case 95: // Thunderstorm\r\n    //             hasThunderstormPassed = true; // Tandai bahwa Thunderstorm telah berlalu\r\n    //             condition.rain = true;\r\n    //             condition.clouds = true;\r\n    //             condition.lightning = true;\r\n    //             condition.wind = true;\r\n    //             Main.selectors.currentWeather.text(\"Thunderstorm\");\r\n    //             break;\r\n    //         default:\r\n    //             Main.selectors.currentWeather.text(\"Unknown Weather\");\r\n    //             break;\r\n    //     }\r\n    \r\n    //     // Mengupdate elemen cuaca\r\n    //     Main.selectors.currentTemp.text(\"23\" + ' °');\r\n    //     Main.selectors.currentHumi.text(\"90%\");\r\n    //     Main.selectors.currentWindSpeed.text(\"2m/s\");\r\n    //     Main.selectors.iconCurrentWeather.attr(\"src\", iconSrc);\r\n    \r\n    //     // Memanggil setConditionReady() setelah semua elemen diperbarui\r\n    //     setConditionReady();\r\n    \r\n    //     // Perbarui indeks kondisi untuk animasi berikutnya\r\n    //     currentConditionIndex = (currentConditionIndex + 1) % conditions.length;\r\n    \r\n    //     // Cek apakah sudah satu putaran penuh\r\n    //     if (currentConditionIndex === 0) {\r\n    //         hourSetCount = (hourSetCount + 1) % 4; // Meningkatkan pengulangan hingga 3\r\n    //     }\r\n    \r\n    //     // Panggil updateWeatherCondition lagi setelah 3 detik\r\n    //     setTimeout(updateWeatherCondition, 15000);\r\n    // }\r\n    \r\n    // // Panggil fungsi pertama kali untuk memulai\r\n    // updateWeatherCondition();\r\n    \r\n    \r\n    const weatherInfo = weatherDescriptions(data.weather_code);\r\n \r\n  \r\n  \r\n    // Tentukan kondisi berdasarkan kode cuaca\r\n    if (data.weather_code === 0 || data.weather_code === 1) {\r\n      //clear\r\n      condition.rain = false;\r\n      condition.clouds = false;\r\n      condition.lightning = false;\r\n      condition.snow = false;\r\n      condition.wind = false;\r\n    } else if (data.weather_code === 2 ) {\r\n      // cloudly || overcast\r\n      condition.rain = false;\r\n      condition.clouds = true;\r\n      condition.lightning = false;\r\n      condition.snow = false;\r\n      condition.wind = false;\r\n    } else if (data.weather_code === 45 || data.weather_code === 48) {\r\n      // fog\r\n      condition.rain = false;\r\n      condition.clouds = true;\r\n      condition.lightning = false;\r\n      condition.snow = false;\r\n      condition.wind = true;\r\n    } else if (data.weather_code >= 51 && data.weather_code <= 55) {\r\n      // drizzle\r\n      condition.rain = true;\r\n      condition.clouds = true;\r\n      condition.lightning = false;\r\n      condition.snow = false;\r\n      condition.wind = false;\r\n    } else if (data.weather_code >= 61 && data.weather_code <= 65 || data.weather_code >=80 && data.weather_code <= 82) {\r\n      // rain\r\n      condition.rain = true;\r\n      condition.clouds = true;\r\n      condition.lightning = false;\r\n      condition.snow = false;\r\n      condition.wind = true;\r\n      condition.lightning = false;\r\n    } else if (data.weather_code >= 71 && data.weather_code <= 77 || data.weather_code >= 85 && data.weather_code <= 86) {\r\n      // snow\r\n      condition.rain = false;\r\n      condition.clouds = false;\r\n      condition.lightning = false;\r\n      condition.snow = true;\r\n      condition.wind = false;\r\n    } else if (data.weather_code >= 95 && data.weather_code <= 99) {\r\n    thunderstorm \r\n      condition.rain = true;\r\n      condition.clouds = true;\r\n      condition.lightning = true;\r\n      condition.snow = false;\r\n      condition.wind = true;\r\n    }\r\n \r\n    Background.setConditionReady();\r\n    // Update UI\r\n    Main.selectors.currentWeather.text(weatherInfo.weather);\r\n    Main.selectors.currentTemp.text(Math.round(data.temperature_2m) + \"\\u00B0\");\r\n    Main.selectors.currentHumi.text(data.relative_humidity_2m + \"%\");\r\n    Main.selectors.currentWindSpeed.text(data.wind_speed_10m + \"m/s\");\r\n    Main.selectors.iconCurrentWeather.attr(\"src\", weatherInfo.iconSrc);\r\n  };\r\n  \r\n  export const renderHourlyForecast = (data) => {\r\n    const currentTime = new Date();\r\n    const currentHour = currentTime.getHours();\r\n    const hourlyForecastContainer = Main.selectors.hourlyForecast.empty();\r\n  \r\n    // Ambil data 12 jam ke depan\r\n    const next12HoursData = data.hourly.time.map((time, index) => ({\r\n      time,\r\n      temperature: data.hourly.temperature_2m[index],\r\n      weatherCode: data.hourly.weather_code[index],\r\n    })).filter(({ time }) => {\r\n      const forecastTime = new Date(time);\r\n      const forecastHour = forecastTime.getHours();\r\n      const forecastDate = forecastTime.toDateString();\r\n      const currentDate = currentTime.toDateString();\r\n  \r\n      return (\r\n        forecastDate === currentDate && // Pastikan masih dalam hari yang sama\r\n        forecastHour >= currentHour && \r\n        forecastHour < currentHour + 12\r\n      ); // Hanya ambil jam saat ini dan 11 jam berikutnya\r\n    });\r\n  \r\n    // Loop untuk menampilkan data di UI\r\n    next12HoursData.forEach(({ time, temperature, weatherCode }) => {\r\n      const timeFormatted = new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });\r\n      const weatherIcon = weatherDescriptions(weatherCode).iconSrc;\r\n      \r\n      hourlyForecastContainer.append(`\r\n        <div class=\"bg-[#48319D]/80 w-12 h-[110px] rounded-full shadow-2xl mx-auto text-center\">\r\n          <img src=\"${weatherIcon}\" alt=\"icon_weather\" class=\"w-14 h-14 object-contain relative -top-5\">\r\n          <div class=\"text-xs text-white relative -top-5\">\r\n            <p class=\"font-bold mt-2\">${timeFormatted}</p>\r\n            <p class=\"my-2\">${Math.round(temperature)}&deg;</p>\r\n          </div>\r\n        </div>\r\n      `);\r\n    });\r\n  };\r\n  \r\n  export const renderDailyForecast = (data) => {\r\n    const dailyForecastContainer = Main.selectors.dailyForecast.empty();\r\n    const today = new Date().getDay();\r\n    \r\n    data.daily.time.forEach((_, i) => {\r\n      const dayIndex = (today + i) % 7;\r\n      const dayMaxTemp = Math.round(data.daily.temperature_2m_max[i]) + \"\\u00B0\";\r\n      const dayMinTemp = Math.round(data.daily.temperature_2m_min[i]) + \"\\u00B0\";\r\n      const weatherCode = data.daily.weather_code[i];\r\n      const dailyIconSrc = weatherDescriptions(weatherCode).iconSrc;\r\n  \r\n      dailyForecastContainer.append(`\r\n        <div class=\"bg-[#48319D]/80 w-12 h-[110px] rounded-full shadow-2xl mx-auto text-center\">\r\n          <img src=\"${dailyIconSrc}\" alt=\"icon_weather\" class=\"w-14 h-14 object-contain relative -top-5\">\r\n          <div class=\"text-xs text-white relative -top-3\">\r\n            <p class=\"font-bold\">${Main.daysOfWeek[dayIndex]}</p>\r\n            <p class=\"underline underline-offset-4\">${dayMaxTemp}</p>\r\n            <p>${dayMinTemp}</p>\r\n          </div>\r\n        </div>\r\n      `);\r\n    });\r\n  };\r\n  ","import * as Weather from \"./weather.js\";  // import weather.js\r\n\r\n// set animationId\r\nexport let animationId = false, assets = [], inputs = [], tempEl = false, canvas = false, context = false, timers = {};\r\n// set assetsImage\r\nexport let imageAssetsLoaded = false, imageAssets = {\r\n  'leaf': { fileName: 'weather_leaf.png' },\r\n  'cloud_02': { fileName: 'weather_cloud_02.png', width: 1792, height: 276 }\r\n};\r\n\r\n// set default properties for spawn cloud\r\nexport let spawnedClouds = false, windSpeed = 30, windDirection = 120, temp = 0;\r\n\r\nexport const rainColor = 'rgba(255, 255, 255, .4)'; // set rain color\r\n\r\n// set utilities methods\r\nexport const randomRange = function(min, max, round = true) {\r\n  const val = Math.random() * (max - min) + min;\r\n  return round ? Math.floor(val) : val;\r\n};\r\n\r\n// config for load images\r\nexport const preLoadImageAssets = (callback) => {\r\n  let imageAssetsCount = 0, imageAssetsLoadedCount = 0;\r\n\r\n  if (imageAssetsLoaded) { if (callback) callback(); return; }\r\n  const loadedHandler = () => {\r\n    imageAssetsLoadedCount++;\r\n    if (imageAssetsLoadedCount === imageAssetsCount) {\r\n      imageAssetsLoaded = true;\r\n      if (callback) callback();\r\n    }\r\n  };\r\n\r\n// looping for searh imgage in assets\r\n  for (const imageAssetName in imageAssets) {\r\n    const imageAsset = imageAssets[imageAssetName];\r\n    imageAssetsCount++;\r\n    imageAsset.image = new Image();\r\n    imageAsset.image.onload = loadedHandler;\r\n    imageAsset.image.src = 'https://s3.amazonaws.com/gerwins/weather/' + imageAsset.fileName;\r\n  }\r\n};\r\n\r\n \r\nexport const setConditionReady = () => {\r\n // stop spawning\r\n pause();\r\n\r\n // clear flags\r\n spawnedClouds = false;\r\n\r\n // clear assets\r\n for(let i = 0, n = assets.length; i < n; i ++)\r\n {\r\n   assets.splice(i, 1);\r\n   n --;\r\n   i --;\r\n }\r\n\r\n // start spawning\r\n beginSpawning();\r\n};\r\n\r\n\r\n//  spawning timers\r\nexport const beginSpawning = () => {\r\n  if (animationId) return;\r\n  if (Weather.condition.clouds && !spawnedClouds) {\r\n    assets.push(new cloud({ x: -400 }), new cloud({ x: 700 }), new cloud({ x: 1400 }));\r\n    spawnedClouds = true;\r\n  }\r\n  if (Weather.condition.rain) timers.rain = setInterval(() => assets.push(new rainDrop()), 60);\r\n  if (Weather.condition.snow) timers.snow = setInterval(() => assets.push(new snowFlake()), 250);\r\n\r\n if(Weather.condition.wind)\r\n  {\r\n    let spawnLeaves = function()\r\n    {\r\n      for(let i = 0, n = randomRange(0, 3); i < n; i ++)\r\n      {\r\n        assets.push(new blowingLeaf());\r\n      }\r\n\r\n      timers.wind = setTimeout(spawnLeaves, randomRange(500, 1500));\r\n    };\r\n    spawnLeaves();\r\n  }\r\n  \r\n  if(Weather.condition.lightning)\r\n    {\r\n      let spawnLightning = function()\r\n      {\r\n        let rand = randomRange(0, 10);\r\n        if(rand > 7)\r\n        {\r\n          timers.secondFlash = setTimeout(function()\r\n          {\r\n            assets.push(new lightning());\r\n          }, 200);\r\n        }\r\n        assets.push(new lightning());\r\n        timers.lightning = setTimeout(spawnLightning, randomRange(500, 7000));\r\n      };\r\n  \r\n      spawnLightning();\r\n    }\r\n    animate();\r\n  };\r\n\r\n\r\n//  animation methods\r\nexport const pause = () =>{\r\n  cancelAnimationFrame(animationId);\r\n  animationId = false;\r\n  for (let intervalId in timers) if (timers[intervalId]) clearInterval(timers[intervalId]);\r\n};\r\n\r\n// config animate\r\nexport const animate = ()=> {\r\n  context.clearRect(0, 0, canvas.width, canvas.height);\r\n  for (let i = 0, n = assets.length; i < n; i++) {\r\n    if (!assets[i].draw()) { assets.splice(i, 1); n--; i--; }\r\n  }\r\n  animationId = window.requestAnimationFrame(animate);\r\n};\r\n\r\n// cloud particle\r\nexport const cloud = function (options) {\r\n  this.type = 'cloud';\r\n  this.img = options.img || imageAssets.cloud_02;\r\n  this.width = this.img.width; \r\n  this.height = this.img.height; \r\n  this.xVelocity = (windSpeed - randomRange(0, 10)) / 60;\r\n  this.x = options.x || randomRange(-100, canvas.width + 100);    \r\n  this.y = options.y || randomRange(0 - (this.height / 2), -60);\r\n};\r\n\r\ncloud.prototype.draw = function () {\r\n  this.x += this.xVelocity;\r\n  context.drawImage(this.img.image, this.x, this.y, this.img.width, this.img.height);\r\n  if (this.x > canvas.width) { this.xVelocity = (windSpeed - randomRange(0, 10)) / 60; this.x = 0 - this.width; }\r\n  if (this.x < 0 - this.width) { this.xVelocity = (windSpeed - randomRange(0, 10)) / 60; this.x = canvas.width; }\r\n  return true;\r\n};\r\n\r\n// rain drop particle\r\nconst rainDrop = function () {\r\n  this.type = 'rain_drop';\r\n  this.width = 3;\r\n  this.height = randomRange(15, 25);\r\n  this.x = randomRange(0, canvas.width);\r\n  this.y = -10;\r\n  this.yVelocity = 8;\r\n};\r\n\r\nrainDrop.prototype.draw = function () {\r\n  this.y += this.yVelocity;\r\n  context.fillStyle = rainColor;\r\n  context.fillRect(this.x, this.y, this.width, this.height);\r\n  if (this.y > canvas.height) {\r\n    if (Math.floor(Math.random() * 10) > 7) for (let i = 0, n = randomRange(3, 5); i < n; i++) assets.push(new splashDrop(this.x));\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n//  Splash drop particle\r\nexport const splashDrop = function(x) {\r\n  this.type = 'splash_drop';\r\n  this.width = 3; this.height = 3;\r\n  this.x = x; this.y = canvas.height;\r\n  this.yVelocity = randomRange(-1, -3, false);\r\n  this.xVelocity = randomRange(-2, 2, false);\r\n  this.age = 0; this.maxAge = 30;\r\n};\r\n\r\nsplashDrop.prototype.draw = function() {\r\n  this.y += this.yVelocity; this.x += this.xVelocity;\r\n  context.fillStyle = rainColor; context.fillRect(this.x, this.y, this.width, this.height);\r\n  this.yVelocity += 0.1; this.age++;\r\n  return this.age > this.maxAge ? false : true;\r\n};\r\n\r\n//  Snow flake particle\r\nexport const snowFlake = function() {\r\n  this.type = 'snow_flake';\r\n  this.width = randomRange(10, 30); this.height = this.width;\r\n  this.x = randomRange(-200, canvas.width + 200); this.y = -30;\r\n  this.xVelocity = (windSpeed - randomRange(0, 10)) / 60; this.yVelocity = randomRange(.8, 1.4, false);\r\n  this.opacity = randomRange(.3, .7, false); this.settleLength = 500; this.settled = 0;\r\n};\r\n\r\nsnowFlake.prototype.draw = function() {\r\n  this.y += this.yVelocity; this.x += this.xVelocity;\r\n  context.beginPath(); context.arc(this.x, this.y, this.width / 2, 0, 2 * Math.PI, false);\r\n  context.fillStyle = 'rgba(255, 255, 255, ' + this.opacity + ')'; context.fill();\r\n  if (this.y > canvas.height) { this.xVelocity = 0; this.yVelocity = 0; this.settled++; return this.settled > this.settleLength ? false : true; }\r\n  return true;\r\n};\r\n\r\n \r\n//  Blowing leaf particle\r\nexport const blowingLeaf = function() {\r\n  this.type = 'blowing_leaf';\r\n  this.width = randomRange(10, 20);\r\n  this.height = this.width * 2.24;\r\n\r\n  this.xVelocity = (windSpeed - randomRange(0, 20)) / 6;\r\n  this.yVelocity = this.xVelocity / 6;\r\n\r\n  this.rotation = Math.random() * 1;\r\n  this.rotationVelocity = randomRange(-.06, .06, false);\r\n\r\n  if(this.xVelocity > 0)\r\n  {\r\n    // >>>\r\n    this.x = randomRange(-50, -100);\r\n  }\r\n  else\r\n  {\r\n    // <<<\r\n    this.x = randomRange(canvas.width, canvas.width + 100);\r\n  }\r\n  \r\n  this.gravity = randomRange(-0.06, 0.06, false);\r\n  this.y = randomRange(canvas.height - canvas.height / 4, canvas.height);\r\n  this.yDirectionChangeLength = randomRange(20, 100);\r\n  this.yDirectionTravelled = 0;\r\n};\r\n\r\nblowingLeaf.prototype.draw = function(){\r\n  // save context\r\n  context.save();\r\n\r\n  // move x and y\r\n  this.x += this.xVelocity;\r\n  this.y += this.yVelocity;\r\n\r\n  // sway\r\n  this.yVelocity = this.yVelocity + this.gravity + -.01;\r\n\r\n  this.yDirectionTravelled ++;\r\n  if(this.yDirectionTravelled > this.yDirectionChangeLength)\r\n  {\r\n    this.yDirectionTravelled = 0;\r\n    this.gravity *= -1;\r\n    this.yDirectionChangeLength = randomRange(20, 100);\r\n  }\r\n\r\n  // increment rotation\r\n  this.rotation += this.rotationVelocity;\r\n\r\n  // translate context\r\n  var xOffset = this.width / 2;\r\n  var yOffset = this.height / 2;\r\n\r\n  context.translate(this.x + xOffset, this.y + yOffset);\r\n  context.rotate(this.rotation);\r\n  context.drawImage(imageAssets.leaf.image, 0, 0, 100, 224, 0 - xOffset, 0 - yOffset, this.width, this.height);\r\n  \r\n  // restore context\r\n  context.restore();\r\n\r\n  if(this.xVelocity > 0)\r\n  {\r\n    // >>>\r\n    if(this.x > canvas.width)\r\n    {\r\n      return false;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    // <<<\r\n    if(this.x < -50)\r\n    {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n\r\n// Lightning particle x\r\nexport const lightning = function() {\r\n  this.type = 'lightning';\r\n  this.x = randomRange(0, canvas.width);\r\n  this.age = 0;\r\n  this.life = 20;\r\n  this.drawFrom = 0;\r\n  this.drawTo = 0;\r\n  this.points = [\r\n    [this.x, 0]\r\n  ];\r\n  this.totalPoints = 0;\r\n  this.opacity = .7;\r\n\r\n  this.flashed = false;\r\n  this.flashOpacity = 0;\r\n\r\n  var nextPointX = 0;\r\n  var nextPointY = 0;\r\n  while(nextPointY < canvas.height)\r\n  {\r\n    var lastPoint = this.points[this.points.length - 1];\r\n    nextPointX = lastPoint[0] > this.x ? randomRange(this.x, this.x + 15) : randomRange(this.x + 15, this.x);\r\n    nextPointY = lastPoint[1] + randomRange(10, 50);\r\n    \r\n    if(nextPointY > canvas.height)\r\n    {\r\n      nextPointY = canvas.height;\r\n    }\r\n\r\n    this.totalPoints ++;\r\n    this.points.push([nextPointX, nextPointY]);\r\n  }\r\n};\r\n\r\nlightning.prototype.draw = function()\r\n{\r\n  if(this.drawTo < this.points.length)\r\n  {\r\n    this.drawTo = this.drawTo + 2;\r\n    if(this.drawTo > this.points.length)\r\n    {\r\n      this.drawTo = this.points.length;\r\n    }\r\n  }\r\n  else\r\n  {\r\n    this.opacity = this.opacity - .02;\r\n\r\n    if(!this.flashed)\r\n    {\r\n      this.flashed = true;\r\n      this.flashOpacity = 1;\r\n    }\r\n  }\r\n\r\n  if(this.opacity < 0)\r\n  {\r\n    return false;\r\n  }\r\n\r\n  if(this.flashOpacity > 0)\r\n  {\r\n    context.fillStyle = 'rgba(255, 255, 255, ' + this.flashOpacity + ')';\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n    this.flashOpacity = this.flashOpacity - .1;\r\n  }\r\n\r\n  context.beginPath();\r\n  context.moveTo(this.points[this.drawFrom][0], this.points[this.drawFrom][1]);\r\n\r\n  for(var i = this.drawFrom; i < this.drawTo; i ++)\r\n  {\r\n    context.lineTo(this.points[i][0], this.points[i][1]);\r\n  }\r\n\r\n  context.strokeStyle = 'rgba(255, 255, 255, ' + this.opacity + ')';\r\n  context.lineWidth = 3;\r\n  context.stroke();\r\n\r\n  return true;\r\n};\r\n\r\n\r\n export let state;\r\n\r\n export function setTimeBasedWeather() {\r\n  const currentHour = new Date().getHours();\r\n \r\n   if (currentHour >= 4 && currentHour < 6) {\r\n     state = 'sunrise';\r\n   } else if (currentHour >= 7 && currentHour < 15) {\r\n     state = 'day';\r\n   } else if (currentHour >= 16 && currentHour < 19) {\r\n     state = 'sunset';\r\n   } else {\r\n     state = 'night';\r\n   }\r\n \r\n   // Update class name to change background and weather\r\n   if (canvas) {\r\n     canvas.className = state;\r\n   } \r\n }\r\n  // Contoh penggunaan\r\n  setTimeBasedWeather(); // Panggil fungsi untuk mengatur state\r\n \r\n  // Dapatkan nilai state setelah fungsi dipanggil\r\n  console.log(state); // Ini akan menampilkan nilai state yang terbaru \r\n \r\n\r\n// let _currentHour; // Simpan currentHour di sini\r\n\r\n// export let state;\r\n\r\n// export const getCurrentHour = () => _currentHour; // Getter\r\n// export const setCurrentHour = (value) => {\r\n//     _currentHour = value; // Setter\r\n//     setTimeBasedWeather(); // Panggil fungsi setiap kali currentHour diatur\r\n// };\r\n\r\n// export function setTimeBasedWeather() {\r\n//     if (_currentHour >= 4 && _currentHour < 6) {\r\n//         state = 'sunrise';\r\n//     } else if (_currentHour >= 7 && _currentHour < 15) {\r\n//         state = 'day';\r\n//     } else if (_currentHour >= 16 && _currentHour < 19) {\r\n//         state = 'sunset';\r\n//     } else {\r\n//         state = 'night';\r\n//     }\r\n\r\n//     // Update class name to change background and weather\r\n//     if (canvas) {\r\n//         canvas.className = state;\r\n//     }\r\n// }\r\n\r\n\r\n \r\n\r\n// Resize canvas function\r\nexport const resizeCanvas = function() {\r\n  canvas.width = window.innerWidth;\r\n  canvas.height = window.innerHeight;\r\n};\r\n\r\n/*\r\n|\r\n| Initialise\r\n|\r\n*/\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  const inputs = document.getElementsByTagName('input');\r\n  canvas = document.getElementById('canvas'); \r\n  context = canvas.getContext('2d');\r\n  resizeCanvas();\r\n  setTimeBasedWeather();\r\n  window.addEventListener('resize', resizeCanvas);\r\n  \r\n  // let cityEl = document.getElementById('city');\r\n  // let tempEl = document.getElementById('temp');\r\n\r\n  for (const i = 0; i < inputs.length; i++) {\r\n    if (inputs[i].type === 'text') {\r\n      inputs[i].addEventListener('keyup', updateConditions);\r\n    } else {\r\n      inputs[i].addEventListener('change', updateConditions);\r\n    }\r\n  }\r\n\r\n  preLoadImageAssets(function() {\r\n    setConditionReady();\r\n  });\r\n});","import \"../../src/css/main.css\"; // import main.css\r\nimport \"../../src/css/styles.css\"; // import styles.css\r\nimport * as Location from \"./location.js\";  // import location.js\r\nimport * as Background from \"./background.js\";  // import background.js\r\nimport * as Weather from \"./weather.js\";  // import weather.js\r\n\r\n\r\n// import all images from assets/images folder\r\nconst images = require.context(\r\n  \"../assets/images\",\r\n  true,\r\n  /\\.(png|jpe?g|gif|svg|webp)$/\r\n);\r\nimages.keys().forEach((key) => images(key)); // import all img\r\n\r\nexport const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]; // list days of week\r\n\r\n// selector set\r\nexport const selectors = {\r\n  btnRefresh: $(\"#icon-refresh\"),\r\n  cityName: $(\"#city-name\"),\r\n  countryCode: $(\"#country-code\"),\r\n  currentTemp: $(\"#current-temp\"),\r\n  currentHumi: $(\"#current-humi\"),\r\n  currentWeather: $(\"#current-weather\"),\r\n  currentWindSpeed: $(\"#current-windspeed\"),\r\n  iconCurrentWeather: $(\"#icon-current-weather\"),\r\n  localTime: $(\"#local-time\"),\r\n  hourlyForecast: $(\"#hourly-forecast\"),\r\n  dailyForecast: $(\"#daily-forecast\"),\r\n  drawer: $(\"#drawer-swipe\"),\r\n  expandedContent: $(\"#drawer-expanded-content\"),\r\n  menu: $(\"#menu\"),\r\n};\r\n\r\n// (f) showTime\r\nexport const showTime = () => {\r\n  const date = new Date();\r\n  let d = date.getDate(); // get currentDate\r\n  let day= date.getDay(); // get currentDay\r\n  let hours = date.getHours();  // get currentHours\r\n  let minutes = date.getMinutes();  // getCurrentMinutes\r\n  let seconds = date.getSeconds();\r\n\r\n  hours = (hours < 10) ? \"0\" + hours : hours;\r\n  minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n\r\n  // format time with <span> for colons\r\n  let time = `${daysOfWeek[day]} ${d} || ${hours} <span class=\"colon\">:</span> ${minutes}`;\r\n\r\n  selectors.localTime.html(time);\r\n\r\n // apply blink effect to colons every second\r\n const currentSeconds = new Date().getSeconds();\r\n  if (currentSeconds % 1 === 0) {  // Blink every second\r\n    $('.colon').addClass('blink');\r\n  } else {\r\n    $('.colon').removeClass('blink');\r\n  }\r\n\r\n  setTimeout(showTime, 1000);\r\n}\r\n\r\n\r\n$(window).on(\"load\", () => {\r\n  selectors.btnRefresh.on(\"click\", () => {   // refresh-page\r\n    location.reload();  // reload page\r\n  });\r\n\r\n  $(\"#drawer-toggle\").on(\"click\", () => {   // show/hide drawer\r\n    selectors.drawer.toggleClass(\"drawer-collapsed drawer-expanded\");\r\n    selectors.expandedContent.toggleClass(\"hidden\");\r\n    selectors.menu.toggleClass(\"hidden\");\r\n  });\r\n  \r\n  $(\"#daily-forecast\").addClass(\"hidden\");\r\n  $(\"#hourly-page\").on(\"click\", () => {   // event for switching between hourly and daily forecast\r\n    selectors.dailyForecast.addClass(\"hidden\");\r\n    selectors.hourlyForecast.removeClass(\"hidden\");\r\n  });\r\n  \r\n  $(\"#daily-page\").on(\"click\", () => {    // event for switching between hourly and daily forecast\r\n    selectors.hourlyForecast.addClass(\"hidden\");\r\n    selectors.dailyForecast.removeClass(\"hidden\");\r\n  });\r\n  \r\n  Location.getCoordinates((lat, lon) => { // fetch api\r\n    // api weather\r\n    const apiWeather = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current=temperature_2m,relative_humidity_2m,weather_code,wind_speed_10m&hourly=temperature_2m,weather_code&daily=weather_code,temperature_2m_max,temperature_2m_min&timezone=Asia%2FBangkok`;\r\n    // api geocoding\r\n    fetch(`https://api.opencagedata.com/geocode/v1/json?q=${lat}%2C${lon}&key=250178f6b314472c95280f5f73d608e1`)\r\n      .then(response => response.json())\r\n      .then(Location.renderGeocoding)\r\n      .catch(console.error);\r\n    // api weather process\r\n    fetch(apiWeather)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        Weather.renderCurrentWeather(data.current); // renderCurrentW4eather\r\n        Background.setConditionReady(); // setCondition [AnimationBackground]\r\n        Weather.renderHourlyForecast(data); // renderHourlyForecast\r\n        Weather.renderDailyForecast(data);  // renderDailyForecast\r\n      })\r\n      .catch(console.error);\r\n  }, (err) => {\r\n    alert(\"Unable to retrieve your location. Please ensure location services are enabled.\");\r\n    console.error(\"Geolocation error:\", err);\r\n  });\r\n  \r\n  \r\n});\r\n\r\nshowTime(); // running showTime\r\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","replace","p","renderGeocoding","data","cityName","text","results","components","city","county","countryCode","country_code","condition","clouds","lightning","rain","snow","wind","weatherDescriptions","weatherCode","weather","iconSrc","timeOfDay","animationId","assets","imageAssetsLoaded","imageAssets","fileName","width","height","spawnedClouds","rainColor","randomRange","min","max","round","val","Math","random","floor","setConditionReady","pause","n","splice","beginSpawning","push","cloud","x","timers","setInterval","rainDrop","snowFlake","spawnLeaves","blowingLeaf","setTimeout","spawnLightning","secondFlash","animate","cancelAnimationFrame","intervalId","clearInterval","context","clearRect","canvas","draw","requestAnimationFrame","options","type","img","cloud_02","xVelocity","y","drawImage","image","yVelocity","fillStyle","fillRect","splashDrop","age","maxAge","opacity","settleLength","settled","beginPath","arc","PI","fill","rotation","rotationVelocity","gravity","yDirectionChangeLength","yDirectionTravelled","save","xOffset","yOffset","translate","rotate","leaf","restore","life","drawFrom","drawTo","points","totalPoints","flashed","flashOpacity","nextPointX","nextPointY","lastPoint","state","setTimeBasedWeather","currentHour","Date","getHours","className","moveTo","lineTo","strokeStyle","lineWidth","stroke","console","log","resizeCanvas","innerWidth","innerHeight","addEventListener","inputs","getElementById","getContext","updateConditions","callback","imageAssetsCount","imageAssetsLoadedCount","loadedHandler","imageAssetName","imageAsset","Image","onload","preLoadImageAssets","forEach","daysOfWeek","selectors","btnRefresh","$","currentTemp","currentHumi","currentWeather","currentWindSpeed","iconCurrentWeather","localTime","hourlyForecast","dailyForecast","drawer","expandedContent","menu","showTime","date","getDate","day","getDay","hours","minutes","getMinutes","getSeconds","time","html","addClass","removeClass","on","reload","toggleClass","success","error","navigator","geolocation","getCurrentPosition","position","lat","lon","apiWeather","fetch","then","response","json","catch","weatherInfo","weather_code","thunderstorm","temperature_2m","relative_humidity_2m","wind_speed_10m","attr","current","currentTime","hourlyForecastContainer","empty","hourly","index","temperature","filter","forecastTime","forecastHour","toDateString","timeFormatted","toLocaleTimeString","hour","minute","hour12","weatherIcon","append","dailyForecastContainer","today","daily","_","dayIndex","dayMaxTemp","temperature_2m_max","dayMinTemp","temperature_2m_min","dailyIconSrc","coords","latitude","longitude","err","message","errorMessage","alert"],"sourceRoot":""}